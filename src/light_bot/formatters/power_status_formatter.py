from datetime import datetime


class PowerStatusFormatter:
    """Format power status messages for Telegram notifications"""

    @staticmethod
    def format_power_on_message(timestamp: datetime) -> str:
        """Format message for when power comes back on"""
        kyiv_time = timestamp.strftime('%d.%m.%Y %H:%M:%S')
        return (
            "‚ö°Ô∏è <b>–°–≤—ñ—Ç–ª–æ –∑'—è–≤–∏–ª–æ—Å—å!</b> ‚ö°Ô∏è\n\n"
            "‚úÖ –ï–ª–µ–∫—Ç—Ä–æ–ø–æ—Å—Ç–∞—á–∞–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ\n"
            f"üïê –ß–∞—Å: {kyiv_time}\n\n"
            "üè† –ú–æ–∂–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –ø–æ–±—É—Ç–æ–≤–∏–º–∏ –ø—Ä–∏–ª–∞–¥–∞–º–∏"
        )

    @staticmethod
    def format_power_off_message(timestamp: datetime) -> str:
        """Format message for when power goes out"""
        kyiv_time = timestamp.strftime('%d.%m.%Y %H:%M:%S')
        return (
            "üî¥ <b>–°–≤—ñ—Ç–ª–æ –∑–Ω–∏–∫–ª–æ</b> üî¥\n\n"
            "‚ùå –ï–ª–µ–∫—Ç—Ä–æ–ø–æ—Å—Ç–∞—á–∞–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—î\n"
            f"üïê –ß–∞—Å: {kyiv_time}"
        )
